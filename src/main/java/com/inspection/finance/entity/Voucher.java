package com.inspection.finance.entity;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.inspection.entity.Code;
import com.inspection.facility.entity.Facility;
import com.inspection.facility.entity.FacilityTransaction;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.Getter;
import lombok.Setter;

/**
 * 전표 엔티티
 * 회계 거래의 기본 단위로, 하나의 거래를 나타냅니다.
 */
@Entity
@Table(name = "vouchers")
@EntityListeners(AuditingEntityListener.class)
@Getter @Setter
public class Voucher {
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "voucher_id")
    private Long voucherId;  // 전표 ID (PK)
    
    @Column(name = "voucher_number", unique = true, nullable = false, length = 50)
    private String voucherNumber;  // 전표번호 (자동생성)
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "voucher_type_code", nullable = false)
    private Code voucherType;  // 전표유형 (매입, 매출, 감가상각 등)
    
    @Column(name = "transaction_date", nullable = false)
    private LocalDateTime transactionDate;  // 거래일자
    
    @Column(name = "description", length = 500)
    private String description;  // 적요/설명
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "facility_id")
    private Facility facility;  // 관련 시설물 (있는 경우)
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "facility_transaction_id")
    private FacilityTransaction facilityTransaction;  // 관련 시설물 트랜잭션 (있는 경우)
    
    @Column(name = "total_amount", nullable = false, precision = 19, scale = 2)
    private BigDecimal totalAmount;  // 전표 총액
    
    @Column(name = "created_by", length = 50, nullable = false)
    private String createdBy;  // 작성자 ID
    
    @CreatedDate
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;  // 작성일시
    
    @Column(name = "is_auto_generated", nullable = false)
    private boolean isAutoGenerated = true;  // 자동 생성 여부
    
    @OneToMany(mappedBy = "voucher", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<VoucherItem> items = new ArrayList<>();  // 전표 항목들
    
    /**
     * 전표 항목 추가
     */
    public void addItem(VoucherItem item) {
        items.add(item);
        item.setVoucher(this);
    }
    
    /**
     * 전표 항목 제거
     */
    public void removeItem(VoucherItem item) {
        items.remove(item);
        item.setVoucher(null);
    }
} 